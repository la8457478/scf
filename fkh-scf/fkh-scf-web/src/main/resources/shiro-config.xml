<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
        <!-- id属性值要对应 web.xml中shiro的filter对应的bean -->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"></property>
            <property name="filters">
                <util:map>
                    <entry key="authc" value-ref="shiroLoginFilter"/>
                </util:map>
            </property>
            <!-- 未登录跳转页面，请求地址将由formAuthenticationFilter进行表单认证 -->
            <!-- 本项目通过ajax访问，由ShiroLoginFilter中处理返回json信息 -->
            <property name="loginUrl" value="/login.html"/>
            <property name="unauthorizedUrl" value="/login.html"/>
            <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面，这个位置会拦截不到，下面有给出解决方法 -->
            <!-- 本项目通过ajax访问，由BaseController中@ExceptionHandler捕获异常处理 -->
            <!--<property name="unauthorizedUrl" value="/refuse"></property>-->

            <!-- 过滤器定义，从上到下执行，一般将/**放在最下面 -->
            <property name="filterChainDefinitions">
                <value>
                    <!-- 对静态资源设置匿名访问 -->
                    /newassets/** = anon
                    /assets/** = anon
                    /common/** = anon
                    /WEB-INF/pages/** = anon
                    <!--开放登陆接口-->
                    /login.html = anon
                    /swagger/** = anon
                    /springfox-swagger-ui/** = anon
                    /swagger-ui.html = anon
                    /randomCode.html = anon
                    /login = anon
                    <!-- /**=authc 所有的url都必须通过认证才可以访问 -->
                    /** = authc
                    <!-- /**=anon 所有的url都可以匿名访问,不能配置在最后一排，不然所有的请求都不会拦截 -->
                </value>
            </property>
        </bean>
        <!--使用ajax访问，自定义未登录返回信息-->
        <bean id="shiroLoginFilter" class="com.fkhwl.scf.web.shiro.ShiroLoginFilter"></bean>

        <!-- 解决shiro配置的没有权限访问时，unauthorizedUrl不跳转到指定路径的问题 -->
        <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
            <property name="exceptionMappings">
                <props>
                    <prop key="org.apache.shiro.authz.UnauthorizedException">/refuse</prop>
                </props>
            </property>
        </bean>

        <!--session操作-->
        <bean id="redisSessionDAO" class="com.fkhwl.scf.web.shiro.RedisSessionDao">
            <property name="sessionIdGenerator">
                <bean class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
            </property>
        </bean>
        <!--session管理器-->
        <bean id="shiroRedisSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="sessionDAO" ref="redisSessionDAO"/>
            <!--超时 ms-->
            <property name="globalSessionTimeout" value="1800000"/>
            <!-- 相隔多久检查一次session的有效性   -->
            <property name="sessionValidationInterval" value="900000"/>
            <!-- 删除失效session -->
            <property name="deleteInvalidSessions" value="true"/>
        </bean>
        <bean id="sessionManager"
              class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="sessionDAO" ref="redisSessionDAO"/>
        </bean>
        <!-- securityManager安全管理器 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="sessionManager" ref="sessionManager"/>
            <property name="realm" ref="myRealm"></property>
        </bean>

        <!-- 配置自定义Realm -->
        <bean id="myRealm" class="com.fkhwl.scf.web.shiro.MyRealm">
            <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
            <property name="credentialsMatcher" ref="credentialsMatcher"></property>
        </bean>
        <!-- 凭证匹配器 -->
        <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <!-- 加密算法 -->
            <property name="hashAlgorithmName" value="md5"></property>
            <!-- 迭代次数 -->
            <property name="hashIterations" value="1"></property>
        </bean>
    </beans>
